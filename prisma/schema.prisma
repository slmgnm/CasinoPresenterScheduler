// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model GamePresenter {
  id        String    @id @default(cuid()) 
  name      String
  shift     String   // Morning, Afternoon, Night
  schedule  Schedule[]
}

model Table {
  id        String   @id @default(cuid()) 
  name      String
  schedule  Schedule[]
}

model Schedule {
  id              Int      @id @default(autoincrement())
  startTime       DateTime
  endTime         DateTime
  gamePresenter   GamePresenter? @relation(fields: [gamePresenterId], references: [id])
  gamePresenterId String? 
  table           Table? @relation(fields: [tableId], references: [id])
  tableId         String? 
  breakSlot       Boolean
}



model Day {
  id        String @id @default(cuid())
  name      String // monday, tuesday, ...
  dayOfWeek Int // @see getDay() documentation, 0 for Sunday, 1 for Monday, ...
  openTime  String
  closeTime String
}

model ClosedDay {
  id   String   @id @default(cuid())
  date DateTime @unique
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}   